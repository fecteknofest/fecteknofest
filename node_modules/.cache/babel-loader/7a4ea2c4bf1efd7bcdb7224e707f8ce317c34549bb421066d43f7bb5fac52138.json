{"ast":null,"code":"import{useState,useEffect}from'react';import{Container,Typography,Grid,Box,TextField,InputAdornment,MenuItem,Skeleton}from'@mui/material';import{Search as SearchIcon}from'@mui/icons-material';import ProjectCard from'../components/ProjectCard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Projects(){const[projects,setProjects]=useState([]);const[filteredProjects,setFilteredProjects]=useState([]);const[isLoading,setIsLoading]=useState(true);const[searchTerm,setSearchTerm]=useState('');const[filterCategory,setFilterCategory]=useState('all');const categories=[{value:'all',label:'Tüm Projeler'},{value:'robotics',label:'Robotik'},{value:'software',label:'Yazılım'},{value:'ai',label:'Yapay Zeka'},{value:'hardware',label:'Donanım'}];useEffect(()=>{const fetchProjects=async()=>{try{// API çağrısı simülasyonu\nconst response=await new Promise(resolve=>setTimeout(()=>resolve([{id:1,title:'Otonom İnsansız Kara Aracı AGV',shortDescription:'TEKNOFEST yarışması için geliştirilen AGV projesi',description:'Yapay zeka destekli, tamamen otonom  sürüş yapabilen, görüntü işleme teknolojileri ile nesne tanıma ve verilen görevleri yerine getirebilen insansız kara aracı.',technologies:['Python','OpenCV','ROS','TensorFlow'],image:'agv.jpg',category:'robotics',github:'https://github.com/fecteknofest',demoLink:'https://www.youtube.com/watch?v=aG-Tpy_nhrM',achievements:['TEKNOFEST 2024 Dijital Teknolojiler Yarışması 11. Sırada']}]),1000));setProjects(response);setFilteredProjects(response);setIsLoading(false);}catch(error){console.error('Projeler yüklenirken hata oluştu:',error);setIsLoading(false);}};fetchProjects();},[]);useEffect(()=>{const filtered=projects.filter(project=>{const matchesSearch=project.title.toLowerCase().includes(searchTerm.toLowerCase())||project.description.toLowerCase().includes(searchTerm.toLowerCase());const matchesCategory=filterCategory==='all'||project.category===filterCategory;return matchesSearch&&matchesCategory;});setFilteredProjects(filtered);},[searchTerm,filterCategory,projects]);return/*#__PURE__*/_jsx(Box,{sx:{py:8},children:/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",component:\"h1\",gutterBottom:true,sx:{textAlign:'center',fontWeight:'bold'},children:\"Projelerimiz\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{mb:6},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,variant:\"outlined\",placeholder:\"Proje Ara...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(SearchIcon,{})})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,select:true,variant:\"outlined\",value:filterCategory,onChange:e=>setFilterCategory(e.target.value),children:categories.map(category=>/*#__PURE__*/_jsx(MenuItem,{value:category.value,children:category.label},category.value))})})]}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:4,children:isLoading?// Loading skeletons\n[...Array(6)].map((_,index)=>/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,md:4,children:[/*#__PURE__*/_jsx(Skeleton,{variant:\"rectangular\",height:200}),/*#__PURE__*/_jsx(Skeleton,{}),/*#__PURE__*/_jsx(Skeleton,{width:\"60%\"})]},index)):filteredProjects.length===0?/*#__PURE__*/_jsx(Box,{sx:{textAlign:'center',width:'100%',mt:4},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"text.secondary\",children:\"Arad\\u0131\\u011F\\u0131n\\u0131z kriterlere uygun proje bulunamad\\u0131.\"})}):filteredProjects.map(project=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsx(ProjectCard,{project:project})},project.id))})]})});}export default Projects;","map":{"version":3,"names":["useState","useEffect","Container","Typography","Grid","Box","TextField","InputAdornment","MenuItem","Skeleton","Search","SearchIcon","ProjectCard","jsx","_jsx","jsxs","_jsxs","Projects","projects","setProjects","filteredProjects","setFilteredProjects","isLoading","setIsLoading","searchTerm","setSearchTerm","filterCategory","setFilterCategory","categories","value","label","fetchProjects","response","Promise","resolve","setTimeout","id","title","shortDescription","description","technologies","image","category","github","demoLink","achievements","error","console","filtered","filter","project","matchesSearch","toLowerCase","includes","matchesCategory","sx","py","children","maxWidth","variant","component","gutterBottom","textAlign","fontWeight","container","spacing","mb","item","xs","md","fullWidth","placeholder","onChange","e","target","InputProps","startAdornment","position","select","map","Array","_","index","sm","height","width","length","mt","color"],"sources":["C:/Users/harun/Desktop/teknofestWeb/src/pages/Projects.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { \r\n  Container, \r\n  Typography, \r\n  Grid, \r\n  Box,\r\n  TextField,\r\n  InputAdornment,\r\n  MenuItem,\r\n  Skeleton\r\n} from '@mui/material';\r\nimport { Search as SearchIcon } from '@mui/icons-material';\r\nimport ProjectCard from '../components/ProjectCard';\r\n\r\nfunction Projects() {\r\n  const [projects, setProjects] = useState([]);\r\n  const [filteredProjects, setFilteredProjects] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterCategory, setFilterCategory] = useState('all');\r\n\r\n  const categories = [\r\n    { value: 'all', label: 'Tüm Projeler' },\r\n    { value: 'robotics', label: 'Robotik' },\r\n    { value: 'software', label: 'Yazılım' },\r\n    { value: 'ai', label: 'Yapay Zeka' },\r\n    { value: 'hardware', label: 'Donanım' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      try {\r\n        // API çağrısı simülasyonu\r\n        const response = await new Promise(resolve => \r\n          setTimeout(() => resolve([\r\n            {\r\n              id: 1,\r\n              title: 'Otonom İnsansız Kara Aracı AGV',\r\n              shortDescription: 'TEKNOFEST yarışması için geliştirilen AGV projesi',\r\n              description: 'Yapay zeka destekli, tamamen otonom  sürüş yapabilen, görüntü işleme teknolojileri ile nesne tanıma ve verilen görevleri yerine getirebilen insansız kara aracı.',\r\n              technologies: ['Python', 'OpenCV', 'ROS', 'TensorFlow'],\r\n              image: 'agv.jpg',\r\n              category: 'robotics',\r\n              github: 'https://github.com/fecteknofest',\r\n              demoLink: 'https://www.youtube.com/watch?v=aG-Tpy_nhrM',\r\n              achievements: [\r\n                'TEKNOFEST 2024 Dijital Teknolojiler Yarışması 11. Sırada',\r\n              ]\r\n            },\r\n          \r\n          ]), 1000)\r\n        );\r\n        \r\n        setProjects(response);\r\n        setFilteredProjects(response);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Projeler yüklenirken hata oluştu:', error);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filtered = projects.filter(project => {\r\n      const matchesSearch = project.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                          project.description.toLowerCase().includes(searchTerm.toLowerCase());\r\n      const matchesCategory = filterCategory === 'all' || project.category === filterCategory;\r\n      \r\n      return matchesSearch && matchesCategory;\r\n    });\r\n    \r\n    setFilteredProjects(filtered);\r\n  }, [searchTerm, filterCategory, projects]);\r\n\r\n  return (\r\n    <Box sx={{ py: 8 }}>\r\n      <Container maxWidth=\"lg\">\r\n        <Typography \r\n          variant=\"h3\" \r\n          component=\"h1\" \r\n          gutterBottom\r\n          sx={{ textAlign: 'center', fontWeight: 'bold' }}\r\n        >\r\n          Projelerimiz\r\n        </Typography>\r\n\r\n        {/* Filtreleme Araçları */}\r\n        <Grid container spacing={2} sx={{ mb: 6 }}>\r\n          <Grid item xs={12} md={8}>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              placeholder=\"Proje Ara...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextField\r\n              fullWidth\r\n              select\r\n              variant=\"outlined\"\r\n              value={filterCategory}\r\n              onChange={(e) => setFilterCategory(e.target.value)}\r\n            >\r\n              {categories.map((category) => (\r\n                <MenuItem key={category.value} value={category.value}>\r\n                  {category.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Projeler Listesi */}\r\n        <Grid container spacing={4}>\r\n          {isLoading ? (\r\n            // Loading skeletons\r\n            [...Array(6)].map((_, index) => (\r\n              <Grid item key={index} xs={12} sm={6} md={4}>\r\n                <Skeleton variant=\"rectangular\" height={200} />\r\n                <Skeleton />\r\n                <Skeleton width=\"60%\" />\r\n              </Grid>\r\n            ))\r\n          ) : filteredProjects.length === 0 ? (\r\n            <Box sx={{ textAlign: 'center', width: '100%', mt: 4 }}>\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                Aradığınız kriterlere uygun proje bulunamadı.\r\n              </Typography>\r\n            </Box>\r\n          ) : (\r\n            filteredProjects.map((project) => (\r\n              <Grid item key={project.id} xs={12} sm={6} md={4}>\r\n                <ProjectCard project={project} />\r\n              </Grid>\r\n            ))\r\n          )}\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Projects; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}